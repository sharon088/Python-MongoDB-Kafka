services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    ports:
      - "5000:5000"
    depends_on:
      - broker
      - mongodb
    networks:
      - broker-kafka

  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    container_name: consumer
    ports:
      - "6000:6000"
    depends_on:
      - broker
      - mongodb
    networks:
      - broker-kafka

  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - broker-kafka

  mongodb:
    image: mongo:latest
    container_name: mongodb
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:  
      - "27017:27017"
    networks:
      - broker-kafka

networks:
  broker-kafka:
    driver: bridge
